# Deployment-specific local settings
# ----------------------------------
#
# The content of this file is imported at the very end of `settings.py`. Therefor you can.
# use this file to override any setting that needs to be changed for your local setup.
# Please note, that you are always overriding the whole top-level variable. There is currently
# no easy way e.g. to add a single application to `INSTALLED_APPS` without copying the original
# variable from `settings.py`. But usually this should not be needed anyway.
#
# Below are a few suggestions of which settings you should change.

from pathlib import Path
BASE_DIR = Path(__file__).resolve().parent.parent

# Replace with your own secret key !!
SECRET_KEY = "django-insecure-jeo+.}_}9(Q.t_IU$WJ!%eL=b:MDbAL.~NY_=a:>D@:W[XPh4["
DEBUG = False
ALLOWED_HOSTS = ["*"]

# Where to redirect, when the root URL of the server is accessed
OB_ROOT_REDIRECT = "/api/"

# Needed to secure the CSRF and session cookies.
# SECURITY: Use a sub-domain that is not shared with other applications!
CSRF_COOKIE_DOMAIN = "your-domain.com"
SESSION_COOKIE_DOMAIN = "your-domain.com"

# Built-in database engines:
#   * "django.db.backends.postgresql"
#   * "django.db.backends.mysql"
#   * "django.db.backends.sqlite3"
#   * "django.db.backends.oracle"
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "mydatabase",
        "USER": "mydatabaseuser",
        "PASSWORD": "mypassword",
        "HOST": "localhost",
        "PORT": "5432",
    }
}

# Redis server to asynchronous communication
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("localhost", 6379)],
        },
    },
}

# E-Mail Settings
# See: https://docs.djangoproject.com/en/5.0/ref/settings/#std-setting-EMAIL_BACKEND
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

# DEFAULT_FROM_EMAIL   = "noreply@example.com"
# EMAIL_SUBJECT_PREFIX = "[OpenBook] "
# EMAIL_HOST           = "localhost"
# EMAIL_PORT           = 25
# EMAIL_HOST_USER      = ""
# EMAIL_HOST_PASSWORD  = ""
# EMAIL_TIMEOUT        = 30

# Static files
# Run `manage.py collectstatic` to copy the files first!
STATIC_DIR = "/srv/www/mysite.de/static"
STATIC_URL = "static/"

# Uploaded media files
MEDIA_DIR = "/srv/www/mysite.de/media"
MEDIA_URL = "media/"

# i18n, l10n settings
USE_TZ = True
TIME_ZONE = "Europe/Berlin"

LANGUAGE_CODE = "de-de"
USE_THOUSAND_SEPARATOR = True

SITE_ID = 1

# Database and media files backups
# See: https://django-dbbackup.readthedocs.io/en/stable/configuration.html
#DBBACKUP_STORAGE = "django.core.files.storage.FileSystemStorage"
#DBBACKUP_STORAGE_OPTIONS = {"location": BASE_DIR / "_backup"}

# Additional social auth integrations - here a few noteworthy examples.
# Manage them in the admin panel for full functionality (don't hard-code
# the provider settings in the configuration file).
# See: https://docs.allauth.org/en/latest/socialaccount/providers/index.html
EXTRA_INSTALLED_APPS = [
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.github",
    "allauth.socialaccount.providers.microsoft",
    "allauth.socialaccount.providers.openid_connect",
    "allauth.socialaccount.providers.orcid",
]

# Private key for OpenID Connect (Identity Provider)
# IMPORTANT - Generate your own key with:
# $ openssl genpkey -algorithm RSA -out private_key.pem -pkeyopt rsa_keygen_bits:2048
# See: https://docs.allauth.org/en/latest/idp/openid-connect/installation.html
IDP_OIDC_PRIVATE_KEY = """
-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC8rtj7ytTwHvw6
w0BTxwJ12T8ol8Z2fWSReBZ92QEzYxDXkXYFEcMx7WXfX/2Gp463Bv9vG6z/2m1+
IWlnRpwbC8Q5RYx53yZ5IKv4WUwwYo6ScHV3LFPC2KpOEI9ocROryrF286OuQKAx
2cx3SCsm0jAPlmJh59LumiGcVKZrlSHj0axsZISLmD+A4BMXeeAIHbLU72T6hc7x
U7gZlbMilB0Mi/x3BLcjXHSeU+3B4gYESQjQ7y0+5bVpoiMZjDyDI5KhEtl3uZpI
c+3/xaPPWQ72h0X+uOqvEBV7HssbHvO4AUMVNF1pqcaY7HVIElvLTVODdr3Kv6pf
7ZjH5e7ZAgMBAAECggEAFKuE6sSUIkAKurdEF0lwbA+iGyTRYY6oE0WYFS5OMt5x
7GOrja+d9hy/McLWx8cYW9Wg6v+Zqqe3of8wCFfUZyQZWXrUgk9fbBqXrEvADHbn
joRSYf1RqcFJmua2hycIFCRO36yeLEs5IWzuOM0HqSeSi0qauYYHdgsdjn45gwRx
YKWCr3j2f6UBorrAdvs1JYrYqtWgELR6a4sZ/vd5oJZkTpuG+y3aDHPN0z3wJvTr
3Z0ODEfCpOaHMXEDGMN7lkztUCpSaZH44AWTF4/ZKFJcCf1SV1ICflnCD9BF49mJ
1+zfV+OW73siiMscyHU73aoo8haMhMI35coHgwoQAQKBgQD4O+aZRMIfMGRXk4Hf
EHxAp9kBgM7fYhPsrVeXCnimGfemqCjAFwt6Qbal6vbvabCb8U/kiPoO6PBxl+1G
mcf2zSkLWG1sLIirHatMODHY1YY7gc60piNK/7AIxxpJutrTHQijBYH9TplUHQLG
QJYQSlVKv1IvFWeLUbHZULa62QKBgQDClgErnb4+wO6mYY+CklCJ3ayt2HnGbRWU
vw30zmELrSr80cD5oqP0rs5SYW6F08uw59lLUEpOUxBOtqc9LGXJT5/dxEhFIT6l
dtMBDOolgM2En58UOGQ1rnmMLLkDF5TrXuGd6Z4OoHRyak+SMq74TTYyzAqBk1rF
rkz1pOBUAQKBgC38gtrQBxpaD6y9seiOGEauEaCaqThu5fwJnNlpYjJ7Swq/ylTT
sBelBt4z6i0uKj6pdMCEs7aBZtHUcGuM36OUHE9ywUqx8Vup8mr7WhiubeCmSpHi
2VTyiz0FDZStHg7QKSJyScOQhQ01Fqd9nY9FBgoD6Yi5cWY46za0IjX5AoGAW8ci
sC7Lr4+SQHmdlalrQUuECc8jyLpkxm7Cp2e8ECTSNMK+MUBL8rmMaQC5f3ehCESi
kcpB8eVtuKKgCNNrAuOCdLgCmlCO2r5L0aAExEGXLemXv5LFeShc/geOD+5MeCOd
aLzqpt15bwnDlCJBsq3AVX81qV4WH00R0X69rAECgYEA3TzcSJZ4PCqOzsggrtVm
+RI8D2ZkPUuNeNGyGgk/t1AC/+v89kZCxeZkxUAWk3dlk5clzNqAfW+hoL8mdwt+
XVwMmmjcJkmCOX5+J09lkI4aA9HdaudunX7NqOGiHUItnsdd4/f2MEXU0UtFK6YB
bMGK8/i84PEbNBK/8Iy8pdk=
-----END PRIVATE KEY-----
"""