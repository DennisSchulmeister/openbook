/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Site
 * @export
 * @interface Site
 */
export interface Site {
    /**
     * 
     * @type {number}
     * @memberof Site
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Site
     */
    domain: string;
    /**
     * 
     * @type {string}
     * @memberof Site
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Site
     */
    shortName: string;
    /**
     * URL of your website with information for your users
     * @type {string}
     * @memberof Site
     */
    aboutUrl: string;
    /**
     * 
     * @type {string}
     * @memberof Site
     */
    brandColor?: string;
}

/**
 * Check if a given object implements the Site interface.
 */
export function instanceOfSite(value: object): value is Site {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('domain' in value) || value['domain'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('shortName' in value) || value['shortName'] === undefined) return false;
    if (!('aboutUrl' in value) || value['aboutUrl'] === undefined) return false;
    return true;
}

export function SiteFromJSON(json: any): Site {
    return SiteFromJSONTyped(json, false);
}

export function SiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Site {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'domain': json['domain'],
        'name': json['name'],
        'shortName': json['short_name'],
        'aboutUrl': json['about_url'],
        'brandColor': json['brand_color'] == null ? undefined : json['brand_color'],
    };
}

export function SiteToJSON(json: any): Site {
    return SiteToJSONTyped(json, false);
}

export function SiteToJSONTyped(value?: Site | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'domain': value['domain'],
        'name': value['name'],
        'short_name': value['shortName'],
        'about_url': value['aboutUrl'],
        'brand_color': value['brandColor'],
    };
}

