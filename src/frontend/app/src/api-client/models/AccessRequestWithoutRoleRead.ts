/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserRead } from './UserRead';
import {
    UserReadFromJSON,
    UserReadFromJSONTyped,
    UserReadToJSON,
    UserReadToJSONTyped,
} from './UserRead';
import type { DecisionEnum } from './DecisionEnum';
import {
    DecisionEnumFromJSON,
    DecisionEnumFromJSONTyped,
    DecisionEnumToJSON,
    DecisionEnumToJSONTyped,
} from './DecisionEnum';

/**
 * Very short overview of only the very most important access request fields to be
 * embedded in parent models (without role because it is identical with the parent).
 * @export
 * @interface AccessRequestWithoutRoleRead
 */
export interface AccessRequestWithoutRoleRead {
    /**
     * 
     * @type {string}
     * @memberof AccessRequestWithoutRoleRead
     */
    readonly id: string;
    /**
     * 
     * @type {UserRead}
     * @memberof AccessRequestWithoutRoleRead
     */
    readonly user: UserRead;
    /**
     * 
     * @type {string}
     * @memberof AccessRequestWithoutRoleRead
     */
    readonly role: string;
    /**
     * 
     * @type {DecisionEnum}
     * @memberof AccessRequestWithoutRoleRead
     */
    readonly decision: DecisionEnum;
    /**
     * 
     * @type {Date}
     * @memberof AccessRequestWithoutRoleRead
     */
    readonly decisionDate: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof AccessRequestWithoutRoleRead
     */
    readonly createdAt: Date | null;
}



/**
 * Check if a given object implements the AccessRequestWithoutRoleRead interface.
 */
export function instanceOfAccessRequestWithoutRoleRead(value: object): value is AccessRequestWithoutRoleRead {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('decision' in value) || value['decision'] === undefined) return false;
    if (!('decisionDate' in value) || value['decisionDate'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function AccessRequestWithoutRoleReadFromJSON(json: any): AccessRequestWithoutRoleRead {
    return AccessRequestWithoutRoleReadFromJSONTyped(json, false);
}

export function AccessRequestWithoutRoleReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccessRequestWithoutRoleRead {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'user': UserReadFromJSON(json['user']),
        'role': json['role'],
        'decision': DecisionEnumFromJSON(json['decision']),
        'decisionDate': (json['decision_date'] == null ? null : new Date(json['decision_date'])),
        'createdAt': (json['created_at'] == null ? null : new Date(json['created_at'])),
    };
}

export function AccessRequestWithoutRoleReadToJSON(json: any): AccessRequestWithoutRoleRead {
    return AccessRequestWithoutRoleReadToJSONTyped(json, false);
}

export function AccessRequestWithoutRoleReadToJSONTyped(value?: Omit<AccessRequestWithoutRoleRead, 'id'|'user'|'role'|'decision'|'decision_date'|'created_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

