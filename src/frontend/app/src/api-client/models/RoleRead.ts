/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Very short overview of only the very most important role fields to be embedded
 * in parent models.
 * @export
 * @interface RoleRead
 */
export interface RoleRead {
    /**
     * 
     * @type {string}
     * @memberof RoleRead
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof RoleRead
     */
    readonly slug: string;
    /**
     * 
     * @type {string}
     * @memberof RoleRead
     */
    readonly name: string;
    /**
     * Low values mean less privileges. Make sure to correctly prioritize the rolls to avoid privilege escalation.
     * @type {number}
     * @memberof RoleRead
     */
    readonly priority: number;
    /**
     * 
     * @type {boolean}
     * @memberof RoleRead
     */
    readonly isActive: boolean;
}

/**
 * Check if a given object implements the RoleRead interface.
 */
export function instanceOfRoleRead(value: object): value is RoleRead {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('priority' in value) || value['priority'] === undefined) return false;
    if (!('isActive' in value) || value['isActive'] === undefined) return false;
    return true;
}

export function RoleReadFromJSON(json: any): RoleRead {
    return RoleReadFromJSONTyped(json, false);
}

export function RoleReadFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleRead {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'slug': json['slug'],
        'name': json['name'],
        'priority': json['priority'],
        'isActive': json['is_active'],
    };
}

export function RoleReadToJSON(json: any): RoleRead {
    return RoleReadToJSONTyped(json, false);
}

export function RoleReadToJSONTyped(value?: Omit<RoleRead, 'id'|'slug'|'name'|'priority'|'is_active'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
    };
}

