/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PermissionRead } from './PermissionRead';
import {
    PermissionReadFromJSON,
    PermissionReadFromJSONTyped,
    PermissionReadToJSON,
    PermissionReadToJSONTyped,
} from './PermissionRead';

/**
 * 
 * @export
 * @interface PermissionT
 */
export interface PermissionT {
    /**
     * 
     * @type {string}
     * @memberof PermissionT
     */
    readonly id: string;
    /**
     * 
     * @type {PermissionRead}
     * @memberof PermissionT
     */
    readonly permission: PermissionRead;
    /**
     * 
     * @type {string}
     * @memberof PermissionT
     */
    language: string;
    /**
     * 
     * @type {string}
     * @memberof PermissionT
     */
    name: string;
}

/**
 * Check if a given object implements the PermissionT interface.
 */
export function instanceOfPermissionT(value: object): value is PermissionT {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('permission' in value) || value['permission'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function PermissionTFromJSON(json: any): PermissionT {
    return PermissionTFromJSONTyped(json, false);
}

export function PermissionTFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermissionT {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'permission': PermissionReadFromJSON(json['permission']),
        'language': json['language'],
        'name': json['name'],
    };
}

export function PermissionTToJSON(json: any): PermissionT {
    return PermissionTToJSONTyped(json, false);
}

export function PermissionTToJSONTyped(value?: Omit<PermissionT, 'id'|'permission'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'language': value['language'],
        'name': value['name'],
    };
}

