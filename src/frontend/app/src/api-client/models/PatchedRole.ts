/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Permission } from './Permission';
import {
    PermissionFromJSON,
    PermissionFromJSONTyped,
    PermissionToJSON,
    PermissionToJSONTyped,
} from './Permission';

/**
 * Reuse full cleaning and validation logic on the model's in the REST API, including
 * `full_clean()`, `clean()`, field validation and uniqueness checks. Also make sure,
 * that the pre-filled model instance can be accessed in the DRF view.
 * @export
 * @interface PatchedRole
 */
export interface PatchedRole {
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    readonly id?: string;
    /**
     * 
     * @type {number}
     * @memberof PatchedRole
     */
    scopeType?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    scopeUuid?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    textFormat?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedRole
     */
    isActive?: boolean;
    /**
     * Low values mean less privileges. Make sure to correctly prioritize the rolls to avoid privilege escalation.
     * @type {number}
     * @memberof PatchedRole
     */
    priority?: number;
    /**
     * 
     * @type {Permission}
     * @memberof PatchedRole
     */
    permissions?: Permission;
    /**
     * 
     * @type {number}
     * @memberof PatchedRole
     */
    createdBy?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof PatchedRole
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof PatchedRole
     */
    modifiedBy?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof PatchedRole
     */
    readonly modifiedAt?: Date;
}

/**
 * Check if a given object implements the PatchedRole interface.
 */
export function instanceOfPatchedRole(value: object): value is PatchedRole {
    return true;
}

export function PatchedRoleFromJSON(json: any): PatchedRole {
    return PatchedRoleFromJSONTyped(json, false);
}

export function PatchedRoleFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedRole {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'scopeType': json['scope_type'] == null ? undefined : json['scope_type'],
        'scopeUuid': json['scope_uuid'] == null ? undefined : json['scope_uuid'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'textFormat': json['text_format'] == null ? undefined : json['text_format'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'priority': json['priority'] == null ? undefined : json['priority'],
        'permissions': json['permissions'] == null ? undefined : PermissionFromJSON(json['permissions']),
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'modifiedBy': json['modified_by'] == null ? undefined : json['modified_by'],
        'modifiedAt': json['modified_at'] == null ? undefined : (new Date(json['modified_at'])),
    };
}

export function PatchedRoleToJSON(json: any): PatchedRole {
    return PatchedRoleToJSONTyped(json, false);
}

export function PatchedRoleToJSONTyped(value?: Omit<PatchedRole, 'id'|'created_at'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scope_type': value['scopeType'],
        'scope_uuid': value['scopeUuid'],
        'slug': value['slug'],
        'name': value['name'],
        'description': value['description'],
        'text_format': value['textFormat'],
        'is_active': value['isActive'],
        'priority': value['priority'],
        'permissions': PermissionToJSON(value['permissions']),
        'created_by': value['createdBy'],
        'modified_by': value['modifiedBy'],
    };
}

