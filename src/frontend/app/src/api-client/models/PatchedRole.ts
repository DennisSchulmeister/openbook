/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TextFormatEnum } from './TextFormatEnum';
import {
    TextFormatEnumFromJSON,
    TextFormatEnumFromJSONTyped,
    TextFormatEnumToJSON,
    TextFormatEnumToJSONTyped,
} from './TextFormatEnum';

/**
 * Role
 * @export
 * @interface PatchedRole
 */
export interface PatchedRole {
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    scopeType?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    scopeUuid?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    description?: string;
    /**
     * 
     * @type {TextFormatEnum}
     * @memberof PatchedRole
     */
    textFormat?: TextFormatEnum;
    /**
     * Low values mean less privileges. Make sure to correctly prioritize the rolls to avoid privilege escalation.
     * @type {number}
     * @memberof PatchedRole
     */
    priority?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedRole
     */
    isActive?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedRole
     */
    permissions?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedRole
     */
    roleAssignments?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedRole
     */
    enrollmentMethods?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedRole
     */
    accessRequests?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    readonly createdBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedRole
     */
    readonly createdAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedRole
     */
    readonly modifiedBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedRole
     */
    readonly modifiedAt?: Date | null;
}



/**
 * Check if a given object implements the PatchedRole interface.
 */
export function instanceOfPatchedRole(value: object): value is PatchedRole {
    return true;
}

export function PatchedRoleFromJSON(json: any): PatchedRole {
    return PatchedRoleFromJSONTyped(json, false);
}

export function PatchedRoleFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedRole {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'scopeType': json['scope_type'] == null ? undefined : json['scope_type'],
        'scopeUuid': json['scope_uuid'] == null ? undefined : json['scope_uuid'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'textFormat': json['text_format'] == null ? undefined : TextFormatEnumFromJSON(json['text_format']),
        'priority': json['priority'] == null ? undefined : json['priority'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'permissions': json['permissions'] == null ? undefined : json['permissions'],
        'roleAssignments': json['role_assignments'] == null ? undefined : json['role_assignments'],
        'enrollmentMethods': json['enrollment_methods'] == null ? undefined : json['enrollment_methods'],
        'accessRequests': json['access_requests'] == null ? undefined : json['access_requests'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'modifiedBy': json['modified_by'] == null ? undefined : json['modified_by'],
        'modifiedAt': json['modified_at'] == null ? undefined : (new Date(json['modified_at'])),
    };
}

export function PatchedRoleToJSON(json: any): PatchedRole {
    return PatchedRoleToJSONTyped(json, false);
}

export function PatchedRoleToJSONTyped(value?: Omit<PatchedRole, 'id'|'created_by'|'created_at'|'modified_by'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scope_type': value['scopeType'],
        'scope_uuid': value['scopeUuid'],
        'slug': value['slug'],
        'name': value['name'],
        'description': value['description'],
        'text_format': TextFormatEnumToJSON(value['textFormat']),
        'priority': value['priority'],
        'is_active': value['isActive'],
        'permissions': value['permissions'],
        'role_assignments': value['roleAssignments'],
        'enrollment_methods': value['enrollmentMethods'],
        'access_requests': value['accessRequests'],
    };
}

