/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserRead } from './UserRead';
import {
    UserReadFromJSON,
    UserReadFromJSONTyped,
    UserReadToJSON,
    UserReadToJSONTyped,
} from './UserRead';
import type { RoleRead } from './RoleRead';
import {
    RoleReadFromJSON,
    RoleReadFromJSONTyped,
    RoleReadToJSON,
    RoleReadToJSONTyped,
} from './RoleRead';
import type { DecisionEnum } from './DecisionEnum';
import {
    DecisionEnumFromJSON,
    DecisionEnumFromJSONTyped,
    DecisionEnumToJSON,
    DecisionEnumToJSONTyped,
} from './DecisionEnum';

/**
 * Reduced list of fields for getting a list of access request.
 * @export
 * @interface AccessRequestList
 */
export interface AccessRequestList {
    /**
     * 
     * @type {string}
     * @memberof AccessRequestList
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof AccessRequestList
     */
    scopeType: string;
    /**
     * 
     * @type {string}
     * @memberof AccessRequestList
     */
    readonly scopeUuid: string;
    /**
     * 
     * @type {RoleRead}
     * @memberof AccessRequestList
     */
    readonly role: RoleRead;
    /**
     * 
     * @type {UserRead}
     * @memberof AccessRequestList
     */
    readonly user: UserRead;
    /**
     * 
     * @type {DecisionEnum}
     * @memberof AccessRequestList
     */
    readonly decision: DecisionEnum;
    /**
     * 
     * @type {Date}
     * @memberof AccessRequestList
     */
    readonly decisionDate: Date | null;
    /**
     * 
     * @type {UserRead}
     * @memberof AccessRequestList
     */
    readonly createdBy: UserRead;
    /**
     * 
     * @type {Date}
     * @memberof AccessRequestList
     */
    readonly createdAt: Date | null;
    /**
     * 
     * @type {UserRead}
     * @memberof AccessRequestList
     */
    readonly modifiedBy: UserRead;
    /**
     * 
     * @type {Date}
     * @memberof AccessRequestList
     */
    readonly modifiedAt: Date | null;
}



/**
 * Check if a given object implements the AccessRequestList interface.
 */
export function instanceOfAccessRequestList(value: object): value is AccessRequestList {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('scopeType' in value) || value['scopeType'] === undefined) return false;
    if (!('scopeUuid' in value) || value['scopeUuid'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('decision' in value) || value['decision'] === undefined) return false;
    if (!('decisionDate' in value) || value['decisionDate'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedBy' in value) || value['modifiedBy'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    return true;
}

export function AccessRequestListFromJSON(json: any): AccessRequestList {
    return AccessRequestListFromJSONTyped(json, false);
}

export function AccessRequestListFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccessRequestList {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'scopeType': json['scope_type'],
        'scopeUuid': json['scope_uuid'],
        'role': RoleReadFromJSON(json['role']),
        'user': UserReadFromJSON(json['user']),
        'decision': DecisionEnumFromJSON(json['decision']),
        'decisionDate': (json['decision_date'] == null ? null : new Date(json['decision_date'])),
        'createdBy': UserReadFromJSON(json['created_by']),
        'createdAt': (json['created_at'] == null ? null : new Date(json['created_at'])),
        'modifiedBy': UserReadFromJSON(json['modified_by']),
        'modifiedAt': (json['modified_at'] == null ? null : new Date(json['modified_at'])),
    };
}

export function AccessRequestListToJSON(json: any): AccessRequestList {
    return AccessRequestListToJSONTyped(json, false);
}

export function AccessRequestListToJSONTyped(value?: Omit<AccessRequestList, 'id'|'scope_uuid'|'role'|'user'|'decision'|'decision_date'|'created_by'|'created_at'|'modified_by'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scope_type': value['scopeType'],
    };
}

