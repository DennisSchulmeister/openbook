/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Current User
 * @export
 * @interface CurrentUser
 */
export interface CurrentUser {
    /**
     * 
     * @type {number}
     * @memberof CurrentUser
     */
    readonly id: number;
    /**
     * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
     * @type {string}
     * @memberof CurrentUser
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof CurrentUser
     */
    readonly fullName: string;
    /**
     * 
     * @type {string}
     * @memberof CurrentUser
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof CurrentUser
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof CurrentUser
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof CurrentUser
     */
    picture?: string | null;
    /**
     * Designates whether the user can log into this admin site.
     * @type {boolean}
     * @memberof CurrentUser
     */
    isStaff?: boolean;
    /**
     * 
     * @type {string}
     * @memberof CurrentUser
     */
    email: string;
    /**
     * 
     * @type {boolean}
     * @memberof CurrentUser
     */
    readonly isAuthenticated: boolean;
}

/**
 * Check if a given object implements the CurrentUser interface.
 */
export function instanceOfCurrentUser(value: object): value is CurrentUser {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('isAuthenticated' in value) || value['isAuthenticated'] === undefined) return false;
    return true;
}

export function CurrentUserFromJSON(json: any): CurrentUser {
    return CurrentUserFromJSONTyped(json, false);
}

export function CurrentUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): CurrentUser {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'fullName': json['full_name'],
        'firstName': json['first_name'] == null ? undefined : json['first_name'],
        'lastName': json['last_name'] == null ? undefined : json['last_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'picture': json['picture'] == null ? undefined : json['picture'],
        'isStaff': json['is_staff'] == null ? undefined : json['is_staff'],
        'email': json['email'],
        'isAuthenticated': json['is_authenticated'],
    };
}

export function CurrentUserToJSON(json: any): CurrentUser {
    return CurrentUserToJSONTyped(json, false);
}

export function CurrentUserToJSONTyped(value?: Omit<CurrentUser, 'id'|'full_name'|'is_authenticated'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'description': value['description'],
        'picture': value['picture'],
        'is_staff': value['isStaff'],
        'email': value['email'],
    };
}

