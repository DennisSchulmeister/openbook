/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * HTML Component Definition
 * @export
 * @interface HTMLComponentDefinition
 */
export interface HTMLComponentDefinition {
    /**
     * 
     * @type {string}
     * @memberof HTMLComponentDefinition
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLComponentDefinition
     */
    htmlComponent: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLComponentDefinition
     */
    libraryVersion: string;
    /**
     * 
     * @type {any}
     * @memberof HTMLComponentDefinition
     */
    definition?: any | null;
}

/**
 * Check if a given object implements the HTMLComponentDefinition interface.
 */
export function instanceOfHTMLComponentDefinition(value: object): value is HTMLComponentDefinition {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('htmlComponent' in value) || value['htmlComponent'] === undefined) return false;
    if (!('libraryVersion' in value) || value['libraryVersion'] === undefined) return false;
    return true;
}

export function HTMLComponentDefinitionFromJSON(json: any): HTMLComponentDefinition {
    return HTMLComponentDefinitionFromJSONTyped(json, false);
}

export function HTMLComponentDefinitionFromJSONTyped(json: any, ignoreDiscriminator: boolean): HTMLComponentDefinition {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'htmlComponent': json['html_component'],
        'libraryVersion': json['library_version'],
        'definition': json['definition'] == null ? undefined : json['definition'],
    };
}

export function HTMLComponentDefinitionToJSON(json: any): HTMLComponentDefinition {
    return HTMLComponentDefinitionToJSONTyped(json, false);
}

export function HTMLComponentDefinitionToJSONTyped(value?: Omit<HTMLComponentDefinition, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'html_component': value['htmlComponent'],
        'library_version': value['libraryVersion'],
        'definition': value['definition'],
    };
}

