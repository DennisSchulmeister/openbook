/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TextFormatEnum } from './TextFormatEnum';
import {
    TextFormatEnumFromJSON,
    TextFormatEnumFromJSONTyped,
    TextFormatEnumToJSON,
    TextFormatEnumToJSONTyped,
} from './TextFormatEnum';

/**
 * HTML Library
 * @export
 * @interface HTMLLibrary
 */
export interface HTMLLibrary {
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    readonly fqn: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    organization: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    author?: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    license?: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    website?: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    coderepo?: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    bugtracker?: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    readme?: string;
    /**
     * 
     * @type {TextFormatEnum}
     * @memberof HTMLLibrary
     */
    textFormat?: TextFormatEnum;
    /**
     * Allow other installations to download the library from this server
     * @type {boolean}
     * @memberof HTMLLibrary
     */
    published?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof HTMLLibrary
     */
    readonly translations: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HTMLLibrary
     */
    readonly versions: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof HTMLLibrary
     */
    readonly components: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    readonly createdBy: string;
    /**
     * 
     * @type {Date}
     * @memberof HTMLLibrary
     */
    readonly createdAt: Date | null;
    /**
     * 
     * @type {string}
     * @memberof HTMLLibrary
     */
    readonly modifiedBy: string;
    /**
     * 
     * @type {Date}
     * @memberof HTMLLibrary
     */
    readonly modifiedAt: Date | null;
}



/**
 * Check if a given object implements the HTMLLibrary interface.
 */
export function instanceOfHTMLLibrary(value: object): value is HTMLLibrary {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('fqn' in value) || value['fqn'] === undefined) return false;
    if (!('organization' in value) || value['organization'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('translations' in value) || value['translations'] === undefined) return false;
    if (!('versions' in value) || value['versions'] === undefined) return false;
    if (!('components' in value) || value['components'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedBy' in value) || value['modifiedBy'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    return true;
}

export function HTMLLibraryFromJSON(json: any): HTMLLibrary {
    return HTMLLibraryFromJSONTyped(json, false);
}

export function HTMLLibraryFromJSONTyped(json: any, ignoreDiscriminator: boolean): HTMLLibrary {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'fqn': json['fqn'],
        'organization': json['organization'],
        'name': json['name'],
        'author': json['author'] == null ? undefined : json['author'],
        'license': json['license'] == null ? undefined : json['license'],
        'website': json['website'] == null ? undefined : json['website'],
        'coderepo': json['coderepo'] == null ? undefined : json['coderepo'],
        'bugtracker': json['bugtracker'] == null ? undefined : json['bugtracker'],
        'readme': json['readme'] == null ? undefined : json['readme'],
        'textFormat': json['text_format'] == null ? undefined : TextFormatEnumFromJSON(json['text_format']),
        'published': json['published'] == null ? undefined : json['published'],
        'translations': json['translations'],
        'versions': json['versions'],
        'components': json['components'],
        'createdBy': json['created_by'],
        'createdAt': (json['created_at'] == null ? null : new Date(json['created_at'])),
        'modifiedBy': json['modified_by'],
        'modifiedAt': (json['modified_at'] == null ? null : new Date(json['modified_at'])),
    };
}

export function HTMLLibraryToJSON(json: any): HTMLLibrary {
    return HTMLLibraryToJSONTyped(json, false);
}

export function HTMLLibraryToJSONTyped(value?: Omit<HTMLLibrary, 'id'|'fqn'|'translations'|'versions'|'components'|'created_by'|'created_at'|'modified_by'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'organization': value['organization'],
        'name': value['name'],
        'author': value['author'],
        'license': value['license'],
        'website': value['website'],
        'coderepo': value['coderepo'],
        'bugtracker': value['bugtracker'],
        'readme': value['readme'],
        'text_format': TextFormatEnumToJSON(value['textFormat']),
        'published': value['published'],
    };
}

