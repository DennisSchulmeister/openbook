/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Reduced list of fields for filtering a list of roles.
 * @export
 * @interface RoleList
 */
export interface RoleList {
    /**
     * 
     * @type {string}
     * @memberof RoleList
     */
    readonly id: string;
    /**
     * 
     * @type {number}
     * @memberof RoleList
     */
    scopeType: number;
    /**
     * 
     * @type {string}
     * @memberof RoleList
     */
    scopeUuid: string;
    /**
     * 
     * @type {string}
     * @memberof RoleList
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof RoleList
     */
    name: string;
    /**
     * Low values mean less privileges. Make sure to correctly prioritize the rolls to avoid privilege escalation.
     * @type {number}
     * @memberof RoleList
     */
    priority: number;
    /**
     * 
     * @type {boolean}
     * @memberof RoleList
     */
    isActive?: boolean;
    /**
     * 
     * @type {number}
     * @memberof RoleList
     */
    createdBy?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof RoleList
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {number}
     * @memberof RoleList
     */
    modifiedBy?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof RoleList
     */
    readonly modifiedAt: Date;
}

/**
 * Check if a given object implements the RoleList interface.
 */
export function instanceOfRoleList(value: object): value is RoleList {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('scopeType' in value) || value['scopeType'] === undefined) return false;
    if (!('scopeUuid' in value) || value['scopeUuid'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('priority' in value) || value['priority'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('modifiedAt' in value) || value['modifiedAt'] === undefined) return false;
    return true;
}

export function RoleListFromJSON(json: any): RoleList {
    return RoleListFromJSONTyped(json, false);
}

export function RoleListFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleList {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'scopeType': json['scope_type'],
        'scopeUuid': json['scope_uuid'],
        'slug': json['slug'],
        'name': json['name'],
        'priority': json['priority'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'createdAt': (new Date(json['created_at'])),
        'modifiedBy': json['modified_by'] == null ? undefined : json['modified_by'],
        'modifiedAt': (new Date(json['modified_at'])),
    };
}

export function RoleListToJSON(json: any): RoleList {
    return RoleListToJSONTyped(json, false);
}

export function RoleListToJSONTyped(value?: Omit<RoleList, 'id'|'created_at'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scope_type': value['scopeType'],
        'scope_uuid': value['scopeUuid'],
        'slug': value['slug'],
        'name': value['name'],
        'priority': value['priority'],
        'is_active': value['isActive'],
        'created_by': value['createdBy'],
        'modified_by': value['modifiedBy'],
    };
}

