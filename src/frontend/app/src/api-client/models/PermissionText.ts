/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Permission Label
 * @export
 * @interface PermissionText
 */
export interface PermissionText {
    /**
     * 
     * @type {string}
     * @memberof PermissionText
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof PermissionText
     */
    language: string;
    /**
     * 
     * @type {string}
     * @memberof PermissionText
     */
    parent: string;
    /**
     * 
     * @type {string}
     * @memberof PermissionText
     */
    name: string;
}

/**
 * Check if a given object implements the PermissionText interface.
 */
export function instanceOfPermissionText(value: object): value is PermissionText {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('parent' in value) || value['parent'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function PermissionTextFromJSON(json: any): PermissionText {
    return PermissionTextFromJSONTyped(json, false);
}

export function PermissionTextFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermissionText {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'language': json['language'],
        'parent': json['parent'],
        'name': json['name'],
    };
}

export function PermissionTextToJSON(json: any): PermissionText {
    return PermissionTextToJSONTyped(json, false);
}

export function PermissionTextToJSONTyped(value?: Omit<PermissionText, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'language': value['language'],
        'parent': value['parent'],
        'name': value['name'],
    };
}

