/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Reuse full cleaning and validation logic of the models in the REST API, including
 * `full_clean()`, `clean()`, field validation and uniqueness checks. Also make sure,
 * that the pre-filled model instance can be accessed in the DRF view.
 * ```
 * @export
 * @interface AllowedRolePermission
 */
export interface AllowedRolePermission {
    /**
     * 
     * @type {string}
     * @memberof AllowedRolePermission
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof AllowedRolePermission
     */
    scopeType: string;
    /**
     * 
     * @type {string}
     * @memberof AllowedRolePermission
     */
    permission: string;
}

/**
 * Check if a given object implements the AllowedRolePermission interface.
 */
export function instanceOfAllowedRolePermission(value: object): value is AllowedRolePermission {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('scopeType' in value) || value['scopeType'] === undefined) return false;
    if (!('permission' in value) || value['permission'] === undefined) return false;
    return true;
}

export function AllowedRolePermissionFromJSON(json: any): AllowedRolePermission {
    return AllowedRolePermissionFromJSONTyped(json, false);
}

export function AllowedRolePermissionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllowedRolePermission {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'scopeType': json['scope_type'],
        'permission': json['permission'],
    };
}

export function AllowedRolePermissionToJSON(json: any): AllowedRolePermission {
    return AllowedRolePermissionToJSONTyped(json, false);
}

export function AllowedRolePermissionToJSONTyped(value?: Omit<AllowedRolePermission, 'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scope_type': value['scopeType'],
        'permission': value['permission'],
    };
}

