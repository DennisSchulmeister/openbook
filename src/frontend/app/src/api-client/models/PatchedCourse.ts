/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TextFormatEnum } from './TextFormatEnum';
import {
    TextFormatEnumFromJSON,
    TextFormatEnumFromJSONTyped,
    TextFormatEnumToJSON,
    TextFormatEnumToJSONTyped,
} from './TextFormatEnum';

/**
 * Mixin class for model serializers whose models implement the `ScopedRolesMixin` and as such
 * act as permission scope for user roles. Default serializer, that adds all scope fields.
 * @export
 * @interface PatchedCourse
 */
export interface PatchedCourse {
    /**
     * 
     * @type {string}
     * @memberof PatchedCourse
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedCourse
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedCourse
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedCourse
     */
    description?: string;
    /**
     * 
     * @type {TextFormatEnum}
     * @memberof PatchedCourse
     */
    textFormat?: TextFormatEnum;
    /**
     * Flag that this course is only used for creating other courses.
     * @type {boolean}
     * @memberof PatchedCourse
     */
    isTemplate?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatchedCourse
     */
    readonly owner?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedCourse
     */
    publicPermissions?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedCourse
     */
    readonly roleAssignments?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedCourse
     */
    readonly enrollmentMethods?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PatchedCourse
     */
    readonly accessRequests?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PatchedCourse
     */
    readonly createdBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedCourse
     */
    readonly createdAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedCourse
     */
    readonly modifiedBy?: string;
    /**
     * 
     * @type {Date}
     * @memberof PatchedCourse
     */
    readonly modifiedAt?: Date | null;
}



/**
 * Check if a given object implements the PatchedCourse interface.
 */
export function instanceOfPatchedCourse(value: object): value is PatchedCourse {
    return true;
}

export function PatchedCourseFromJSON(json: any): PatchedCourse {
    return PatchedCourseFromJSONTyped(json, false);
}

export function PatchedCourseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedCourse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'textFormat': json['text_format'] == null ? undefined : TextFormatEnumFromJSON(json['text_format']),
        'isTemplate': json['is_template'] == null ? undefined : json['is_template'],
        'owner': json['owner'] == null ? undefined : json['owner'],
        'publicPermissions': json['public_permissions'] == null ? undefined : json['public_permissions'],
        'roleAssignments': json['role_assignments'] == null ? undefined : json['role_assignments'],
        'enrollmentMethods': json['enrollment_methods'] == null ? undefined : json['enrollment_methods'],
        'accessRequests': json['access_requests'] == null ? undefined : json['access_requests'],
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'modifiedBy': json['modified_by'] == null ? undefined : json['modified_by'],
        'modifiedAt': json['modified_at'] == null ? undefined : (new Date(json['modified_at'])),
    };
}

export function PatchedCourseToJSON(json: any): PatchedCourse {
    return PatchedCourseToJSONTyped(json, false);
}

export function PatchedCourseToJSONTyped(value?: Omit<PatchedCourse, 'id'|'owner'|'role_assignments'|'enrollment_methods'|'access_requests'|'created_by'|'created_at'|'modified_by'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'slug': value['slug'],
        'name': value['name'],
        'description': value['description'],
        'text_format': TextFormatEnumToJSON(value['textFormat']),
        'is_template': value['isTemplate'],
        'public_permissions': value['publicPermissions'],
    };
}

