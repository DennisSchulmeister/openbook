/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * HTML Component
 * @export
 * @interface HTMLComponent
 */
export interface HTMLComponent {
    /**
     * 
     * @type {string}
     * @memberof HTMLComponent
     */
    readonly id: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLComponent
     */
    library: string;
    /**
     * 
     * @type {string}
     * @memberof HTMLComponent
     */
    tagName: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof HTMLComponent
     */
    readonly definitions: Array<string>;
}

/**
 * Check if a given object implements the HTMLComponent interface.
 */
export function instanceOfHTMLComponent(value: object): value is HTMLComponent {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('library' in value) || value['library'] === undefined) return false;
    if (!('tagName' in value) || value['tagName'] === undefined) return false;
    if (!('definitions' in value) || value['definitions'] === undefined) return false;
    return true;
}

export function HTMLComponentFromJSON(json: any): HTMLComponent {
    return HTMLComponentFromJSONTyped(json, false);
}

export function HTMLComponentFromJSONTyped(json: any, ignoreDiscriminator: boolean): HTMLComponent {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'library': json['library'],
        'tagName': json['tag_name'],
        'definitions': json['definitions'],
    };
}

export function HTMLComponentToJSON(json: any): HTMLComponent {
    return HTMLComponentToJSONTyped(json, false);
}

export function HTMLComponentToJSONTyped(value?: Omit<HTMLComponent, 'id'|'definitions'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'library': value['library'],
        'tag_name': value['tagName'],
    };
}

