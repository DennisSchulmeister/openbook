/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TextFormatEnum } from './TextFormatEnum';
import {
    TextFormatEnumFromJSON,
    TextFormatEnumFromJSONTyped,
    TextFormatEnumToJSON,
    TextFormatEnumToJSONTyped,
} from './TextFormatEnum';
import type { Permission } from './Permission';
import {
    PermissionFromJSON,
    PermissionFromJSONTyped,
    PermissionToJSON,
    PermissionToJSONTyped,
} from './Permission';

/**
 * Reduced list of fields for creating and updating a role.
 * @export
 * @interface PatchedRoleWrite
 */
export interface PatchedRoleWrite {
    /**
     * 
     * @type {number}
     * @memberof PatchedRoleWrite
     */
    scopeType?: number;
    /**
     * 
     * @type {string}
     * @memberof PatchedRoleWrite
     */
    scopeUuid?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRoleWrite
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRoleWrite
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRoleWrite
     */
    description?: string;
    /**
     * 
     * @type {TextFormatEnum}
     * @memberof PatchedRoleWrite
     */
    textFormat?: TextFormatEnum;
    /**
     * Low values mean less privileges. Make sure to correctly prioritize the rolls to avoid privilege escalation.
     * @type {number}
     * @memberof PatchedRoleWrite
     */
    priority?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedRoleWrite
     */
    isActive?: boolean;
    /**
     * 
     * @type {Array<Permission>}
     * @memberof PatchedRoleWrite
     */
    permissions?: Array<Permission>;
}



/**
 * Check if a given object implements the PatchedRoleWrite interface.
 */
export function instanceOfPatchedRoleWrite(value: object): value is PatchedRoleWrite {
    return true;
}

export function PatchedRoleWriteFromJSON(json: any): PatchedRoleWrite {
    return PatchedRoleWriteFromJSONTyped(json, false);
}

export function PatchedRoleWriteFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedRoleWrite {
    if (json == null) {
        return json;
    }
    return {
        
        'scopeType': json['scope_type'] == null ? undefined : json['scope_type'],
        'scopeUuid': json['scope_uuid'] == null ? undefined : json['scope_uuid'],
        'slug': json['slug'] == null ? undefined : json['slug'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'textFormat': json['text_format'] == null ? undefined : TextFormatEnumFromJSON(json['text_format']),
        'priority': json['priority'] == null ? undefined : json['priority'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'permissions': json['permissions'] == null ? undefined : ((json['permissions'] as Array<any>).map(PermissionFromJSON)),
    };
}

export function PatchedRoleWriteToJSON(json: any): PatchedRoleWrite {
    return PatchedRoleWriteToJSONTyped(json, false);
}

export function PatchedRoleWriteToJSONTyped(value?: PatchedRoleWrite | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scope_type': value['scopeType'],
        'scope_uuid': value['scopeUuid'],
        'slug': value['slug'],
        'name': value['name'],
        'description': value['description'],
        'text_format': TextFormatEnumToJSON(value['textFormat']),
        'priority': value['priority'],
        'is_active': value['isActive'],
        'permissions': value['permissions'] == null ? undefined : ((value['permissions'] as Array<any>).map(PermissionToJSON)),
    };
}

