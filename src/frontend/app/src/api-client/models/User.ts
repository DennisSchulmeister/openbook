/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * User
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    readonly id: number;
    /**
     * Erforderlich. 150 Zeichen oder weniger. Nur Buchstaben, Ziffern und @/./+/-/_.
     * @type {string}
     * @memberof User
     */
    readonly username: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    readonly fullName: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    picture?: string | null;
    /**
     * Legt fest, ob sich der Benutzer an der Administrationsseite anmelden kann.
     * @type {boolean}
     * @memberof User
     */
    readonly isStaff: boolean;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    lastLogin?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    dateJoined?: Date;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('isStaff' in value) || value['isStaff'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'fullName': json['full_name'],
        'firstName': json['first_name'] == null ? undefined : json['first_name'],
        'lastName': json['last_name'] == null ? undefined : json['last_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'picture': json['picture'] == null ? undefined : json['picture'],
        'isStaff': json['is_staff'],
        'lastLogin': json['last_login'] == null ? undefined : (new Date(json['last_login'])),
        'dateJoined': json['date_joined'] == null ? undefined : (new Date(json['date_joined'])),
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: Omit<User, 'id'|'username'|'full_name'|'is_staff'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'description': value['description'],
        'picture': value['picture'],
        'last_login': value['lastLogin'] == null ? undefined : ((value['lastLogin'] as any).toISOString()),
        'date_joined': value['dateJoined'] == null ? undefined : ((value['dateJoined']).toISOString()),
    };
}

