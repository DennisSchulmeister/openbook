/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PermissionText } from './PermissionText';
import {
    PermissionTextFromJSON,
    PermissionTextFromJSONTyped,
    PermissionTextToJSON,
    PermissionTextToJSONTyped,
} from './PermissionText';

/**
 * 
 * @export
 * @interface PaginatedPermissionTextList
 */
export interface PaginatedPermissionTextList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedPermissionTextList
     */
    count: number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedPermissionTextList
     */
    next?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedPermissionTextList
     */
    previous?: string | null;
    /**
     * 
     * @type {Array<PermissionText>}
     * @memberof PaginatedPermissionTextList
     */
    results: Array<PermissionText>;
}

/**
 * Check if a given object implements the PaginatedPermissionTextList interface.
 */
export function instanceOfPaginatedPermissionTextList(value: object): value is PaginatedPermissionTextList {
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('results' in value) || value['results'] === undefined) return false;
    return true;
}

export function PaginatedPermissionTextListFromJSON(json: any): PaginatedPermissionTextList {
    return PaginatedPermissionTextListFromJSONTyped(json, false);
}

export function PaginatedPermissionTextListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedPermissionTextList {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'],
        'next': json['next'] == null ? undefined : json['next'],
        'previous': json['previous'] == null ? undefined : json['previous'],
        'results': ((json['results'] as Array<any>).map(PermissionTextFromJSON)),
    };
}

export function PaginatedPermissionTextListToJSON(json: any): PaginatedPermissionTextList {
    return PaginatedPermissionTextListToJSONTyped(json, false);
}

export function PaginatedPermissionTextListToJSONTyped(value?: PaginatedPermissionTextList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'count': value['count'],
        'next': value['next'],
        'previous': value['previous'],
        'results': ((value['results'] as Array<any>).map(PermissionTextToJSON)),
    };
}

