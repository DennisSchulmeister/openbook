/* tslint:disable */
/* eslint-disable */
/**
 * OpenBook API
 * Beautiful and Engaging Learning Materials
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TextFormatEnum } from './TextFormatEnum';
import {
    TextFormatEnumFromJSON,
    TextFormatEnumFromJSONTyped,
    TextFormatEnumToJSON,
    TextFormatEnumToJSONTyped,
} from './TextFormatEnum';
import type { UserRead } from './UserRead';
import {
    UserReadFromJSON,
    UserReadFromJSONTyped,
    UserReadToJSON,
    UserReadToJSONTyped,
} from './UserRead';
import type { AccessRequestDurationPeriod } from './AccessRequestDurationPeriod';
import {
    AccessRequestDurationPeriodFromJSON,
    AccessRequestDurationPeriodFromJSONTyped,
    AccessRequestDurationPeriodToJSON,
    AccessRequestDurationPeriodToJSONTyped,
} from './AccessRequestDurationPeriod';
import type { RoleRead } from './RoleRead';
import {
    RoleReadFromJSON,
    RoleReadFromJSONTyped,
    RoleReadToJSON,
    RoleReadToJSONTyped,
} from './RoleRead';

/**
 * Full list of fields for retrieving a single enrollment method.
 * @export
 * @interface PatchedEnrollmentMethod
 */
export interface PatchedEnrollmentMethod {
    /**
     * 
     * @type {string}
     * @memberof PatchedEnrollmentMethod
     */
    readonly id?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedEnrollmentMethod
     */
    scopeType?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedEnrollmentMethod
     */
    scopeUuid?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedEnrollmentMethod
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedEnrollmentMethod
     */
    description?: string;
    /**
     * 
     * @type {TextFormatEnum}
     * @memberof PatchedEnrollmentMethod
     */
    textFormat?: TextFormatEnum;
    /**
     * 
     * @type {RoleRead}
     * @memberof PatchedEnrollmentMethod
     */
    readonly role?: RoleRead;
    /**
     * 
     * @type {string}
     * @memberof PatchedEnrollmentMethod
     */
    roleSlug?: string;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedEnrollmentMethod
     */
    isActive?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PatchedEnrollmentMethod
     */
    durationValue?: number;
    /**
     * 
     * @type {AccessRequestDurationPeriod}
     * @memberof PatchedEnrollmentMethod
     */
    durationPeriod?: AccessRequestDurationPeriod;
    /**
     * 
     * @type {Date}
     * @memberof PatchedEnrollmentMethod
     */
    endDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedEnrollmentMethod
     */
    passphrase?: string;
    /**
     * 
     * @type {UserRead}
     * @memberof PatchedEnrollmentMethod
     */
    readonly createdBy?: UserRead;
    /**
     * 
     * @type {Date}
     * @memberof PatchedEnrollmentMethod
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {UserRead}
     * @memberof PatchedEnrollmentMethod
     */
    readonly modifiedBy?: UserRead;
    /**
     * 
     * @type {Date}
     * @memberof PatchedEnrollmentMethod
     */
    readonly modifiedAt?: Date;
}



/**
 * Check if a given object implements the PatchedEnrollmentMethod interface.
 */
export function instanceOfPatchedEnrollmentMethod(value: object): value is PatchedEnrollmentMethod {
    return true;
}

export function PatchedEnrollmentMethodFromJSON(json: any): PatchedEnrollmentMethod {
    return PatchedEnrollmentMethodFromJSONTyped(json, false);
}

export function PatchedEnrollmentMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedEnrollmentMethod {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'scopeType': json['scope_type'] == null ? undefined : json['scope_type'],
        'scopeUuid': json['scope_uuid'] == null ? undefined : json['scope_uuid'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'textFormat': json['text_format'] == null ? undefined : TextFormatEnumFromJSON(json['text_format']),
        'role': json['role'] == null ? undefined : RoleReadFromJSON(json['role']),
        'roleSlug': json['role_slug'] == null ? undefined : json['role_slug'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'durationValue': json['duration_value'] == null ? undefined : json['duration_value'],
        'durationPeriod': json['duration_period'] == null ? undefined : AccessRequestDurationPeriodFromJSON(json['duration_period']),
        'endDate': json['end_date'] == null ? undefined : (new Date(json['end_date'])),
        'passphrase': json['passphrase'] == null ? undefined : json['passphrase'],
        'createdBy': json['created_by'] == null ? undefined : UserReadFromJSON(json['created_by']),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'modifiedBy': json['modified_by'] == null ? undefined : UserReadFromJSON(json['modified_by']),
        'modifiedAt': json['modified_at'] == null ? undefined : (new Date(json['modified_at'])),
    };
}

export function PatchedEnrollmentMethodToJSON(json: any): PatchedEnrollmentMethod {
    return PatchedEnrollmentMethodToJSONTyped(json, false);
}

export function PatchedEnrollmentMethodToJSONTyped(value?: Omit<PatchedEnrollmentMethod, 'id'|'role'|'created_by'|'created_at'|'modified_by'|'modified_at'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'scope_type': value['scopeType'],
        'scope_uuid': value['scopeUuid'],
        'name': value['name'],
        'description': value['description'],
        'text_format': TextFormatEnumToJSON(value['textFormat']),
        'role_slug': value['roleSlug'],
        'is_active': value['isActive'],
        'duration_value': value['durationValue'],
        'duration_period': AccessRequestDurationPeriodToJSON(value['durationPeriod']),
        'end_date': value['endDate'] == null ? undefined : ((value['endDate'] as any).toISOString()),
        'passphrase': value['passphrase'],
    };
}

